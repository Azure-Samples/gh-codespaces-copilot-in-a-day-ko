name: Build and Deploy ASWA(Frontend) & App Service(Backend)

on:
  push:
    branches: [ "session01" ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP_NAME: 'rg-${{ secrets.AZURE_ENV_NAME }}'
  AZURE_STTAPP_NAME: 'sttapp-${{ secrets.AZURE_ENV_NAME }}'
  AZURE_WEBAPP_NAME: 'appsvc-${{ secrets.AZURE_ENV_NAME }}'    # set this to the name of your Azure Web App
  JAVA_VERSION: '17'                  # set this to the Java version to use
  DISTRIBUTION: Microsoft OpenJDK

permissions:
  contents: read
  id-token: write
  
jobs:
  build_and_deploy_aswa:
    runs-on : ubuntu-latest
    name: Build and Deploy ASWA(Frontend)
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: Azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install ASWA CLI
        shell: bash
        run: |
          npm install -g @azure/static-web-apps-cli
      
      - name: Build
        shell: bash
        run: |
          cd web
          npm install
          npm run build
      
      - name: Create artifacts
        shell: bash
        run: |
          swa build

      - name: Get SWA token
        shell: bash
        run: |
          swa_token=$(az staticwebapp secrets list \
          -g ${{ secrets.AZURE_ENV_NAME }} \
          -n ${{ env.AZURE_STTAPP_NAME }} \
          --query "properties.apiKey" -o tsv)

          echo "::add-mask::$swa_token"
          echo "SWA_TOKEN=$swa_token" >> $GITHUB_ENV

      - name: Deploy SWA to Azure
        shell: bash
        run: |
          swa deploy \
              -d ${{ env.SWA_TOKEN }} \
              -i src/FunctionApp/bin/Release/net7.0/publish \
              --env default

  build_and_deploy_appservice:
    runs-on: ubuntu-latest
    name: Build App Service(Backend)
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set up Java version
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          cache: 'maven'

      - name: Build with Maven
        shell: bash
        run: mvn -f api/pom.xml clean install

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: java-app
          path: '${{ github.workspace }}/api/target/*.jar'

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Login to Azure
        uses: Azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: java-app

      - name: Deploy to Azure Web App
        shell: bash
        run: |
          az webapp deployment \
            -g ${{ secrets.AZURE_ENV_NAME }} \
            -n ${{ env.AZURE_WEBAPP_NAME }} \
            --src '${{ github.workspace }}/api/target/*.jar' \
            --type jar
        # id: deploy-to-webapp
        # uses: azure/webapps-deploy@v2
        # with:
        #   app-name: ${{ env.AZURE_WEBAPP_NAME }}
        #   publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        #   package: '*.jar'
        # uses: 

